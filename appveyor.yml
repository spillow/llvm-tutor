version: '1.0.{build}'

platform:
  - x64

install:
  # Download ninja
  - cmd: set PATH=C:\ninja-build;%PATH%
  - cinst: archiver

clone_folder: c:\projects\llvm-tutor
image:
- Visual Studio 2019
 
configuration:
  - Release

environment:
  matrix:
  - arch: Win64
matrix:
  fast_finish: true

init:
- set arch=
- if "%arch%"=="Win64" ( set arch= Win64)
- echo %arch%
- echo %APPVEYOR_BUILD_WORKER_IMAGE%
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( set generator="Visual Studio 15 2017%arch%" )
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" ( set generator="Visual Studio 14 2015%arch%" )
- if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2013" ( set generator="Visual Studio 12 2013%arch%" )
- echo %generator%

before_build:
- ps: |
    # Download LLVM 10 pre-build packages - courtesy of Zig Lang
    echo "--------> DOWNLOAD LLVM 10"
    mkdir C:\llvm-install
    $source = "https://ziglang.org/deps/llvm%2bclang%2blld-10.0.0-x86_64-windows-msvc-release-mt.tar.xz"
    $destination = "C:\llvm-install\llvm.tar.xz"
    # $client = new-object System.Net.WebClient
    # $client.DownloadFile('https://ziglang.org/deps/llvm%2bclang%2blld-10.0.0-x86_64-windows-msvc-release-mt.tar.xz', 'C:\llvm-install\llvm.tar.xz')
    Invoke-WebRequest $source -OutFile $destination

    cd C:\llvm-install\
    dir C:\llvm-install\
    choco install archiver
    echo "--------> UNPACK LLVM 10"
    arc unarchive llvm.tar.xz C:\llvm-install\llvm
    dir llvm\
    dir llvm\llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt
- cmd: |
    REM CMake scripts print some messages (via 'message'). Although not errors,
    REM these go to stderr, which PowerShell treats as exceptions. For this
    REM reason, run CMake in the command line.
    cd C:\projects\llvm-tutor
    mkdir build
    cd build
    echo %generator%
    echo "--------> RUN CMAKE"
    cmake C:\projects\llvm-tutor -Thost=x64 -DLT_LLVM_INSTALL_DIR="C:\llvm-install\llvm\llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt" -G "Visual Studio 16" -A x64
    cmake --build . --config Release

build:
  project: $(APPVEYOR_BUILD_FOLDER)\build\llvm-tutor.sln
  verbosity: minimal
  parallel: true
